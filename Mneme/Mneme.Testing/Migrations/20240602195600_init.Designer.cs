// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mneme.Testing.Database;

#nullable disable

namespace Mneme.Testing.Migrations
{
	[DbContext(typeof(TestingContext))]
    [Migration("20240602195600_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("Mneme.Model.TestCreation.ClozeDeletionDataStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("End")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Start")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TestClozeDeletionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TestClozeDeletionId");

                    b.ToTable("ClozeDeletionDataStructure");
                });

            modelBuilder.Entity("Mneme.Model.TestCreation.TestClozeDeletion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("Importance")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NoteId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TestInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TestInfoId");

                    b.ToTable("TestClozeDeletions");
                });

            modelBuilder.Entity("Mneme.Model.TestCreation.TestInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Occurrence")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TestInfos");
                });

            modelBuilder.Entity("Mneme.Model.TestCreation.TestMultipleChoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Answer")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TestMultipleChoicesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TestMultipleChoicesId");

                    b.ToTable("TestMultipleChoice");
                });

            modelBuilder.Entity("Mneme.Model.TestCreation.TestMultipleChoices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("Importance")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NoteId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Question")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TestInfoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TestInfoId");

                    b.ToTable("TestMultipleChoices");
                });

            modelBuilder.Entity("Mneme.Model.TestCreation.TestShortAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Answer")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Hint")
                        .HasColumnType("TEXT");

                    b.Property<int>("Importance")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NoteId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Question")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TestInfoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TestInfoId");

                    b.ToTable("TestShortAnswers");
                });

            modelBuilder.Entity("Mneme.Model.TestCreation.ClozeDeletionDataStructure", b =>
                {
                    b.HasOne("Mneme.Model.TestCreation.TestClozeDeletion", null)
                        .WithMany("ClozeDeletionDataStructures")
                        .HasForeignKey("TestClozeDeletionId");
                });

            modelBuilder.Entity("Mneme.Model.TestCreation.TestClozeDeletion", b =>
                {
                    b.HasOne("Mneme.Model.TestCreation.TestInfo", "TestInfo")
                        .WithMany()
                        .HasForeignKey("TestInfoId");

                    b.Navigation("TestInfo");
                });

            modelBuilder.Entity("Mneme.Model.TestCreation.TestMultipleChoice", b =>
                {
                    b.HasOne("Mneme.Model.TestCreation.TestMultipleChoices", null)
                        .WithMany("Answers")
                        .HasForeignKey("TestMultipleChoicesId");
                });

            modelBuilder.Entity("Mneme.Model.TestCreation.TestMultipleChoices", b =>
                {
                    b.HasOne("Mneme.Model.TestCreation.TestInfo", "TestInfo")
                        .WithMany()
                        .HasForeignKey("TestInfoId");

                    b.Navigation("TestInfo");
                });

            modelBuilder.Entity("Mneme.Model.TestCreation.TestShortAnswer", b =>
                {
                    b.HasOne("Mneme.Model.TestCreation.TestInfo", "TestInfo")
                        .WithMany()
                        .HasForeignKey("TestInfoId");

                    b.Navigation("TestInfo");
                });

            modelBuilder.Entity("Mneme.Model.TestCreation.TestClozeDeletion", b =>
                {
                    b.Navigation("ClozeDeletionDataStructures");
                });

            modelBuilder.Entity("Mneme.Model.TestCreation.TestMultipleChoices", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
